https://www.cnblogs.com/grandyang/p/8887985.html
递增栈可以找到左边第一个（往左看不是往右看）比当前小的数字，递减栈可以找到左边第一个比当前大的数字。（右边也一样，只不过规则稍有不同）
单调递增栈可以找到左起第一个比当前数字小的元素。比如数组 [2 1 4 6 5]，刚开始2入栈，数字1入栈的时候，
发现栈顶元素2比较大，将2移出栈，此时1入栈。那么2和1都没左起比自身小的数字。然后数字4入栈的时候，栈顶元素1小于4，
于是1就是4左起第一个小的数字。此时栈里有1和4，然后数字6入栈的时候，栈顶元素4小于6，于是4就是6左起第一个小的数字。
此时栈里有1，4，6，然后数字5入栈的时候，栈顶元素6大于5，将6移除，
此时新的栈顶元素4小于5，那么4就是5左起的第一个小的数字，最终栈内数字为 1，4，5。

往左看的时候不出栈的时候标记，往右看的时候出栈的时候标记。
比如还是21465
递减找第一个最大，出栈的时候找到了，标记。
21，4来了21都出了，都标记，都是4
然后6来了，4出去标记为6，5进来结束。
